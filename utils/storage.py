import os
from datetime import datetime
from pathlib import Path

def save_report(content: str, description: str = None, review_type: str = "comprehensive") -> Path:
    """
    Saves the review report to output directory.
    
    Args:
        content: The formatted review content
        description: Brief description for filename
        review_type: Type of review performed
        
    Returns:
        Path to saved file
    """
    # Create output directory
    output_dir = Path("outputs")
    output_dir.mkdir(exist_ok=True)
    
    # Generate filename
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    desc_slug = ""
    if description and description != "No description provided":
        desc_slug = "_" + "".join(c for c in description if c.isalnum() or c in (' ', '-', '_')).rstrip()[:20].replace(' ', '_')
    
    filename = f"{timestamp}_{review_type}{desc_slug}.md"
    filepath = output_dir / filename
    
    # Create markdown content
    markdown_content = f"""# Code Review Report
**Generated:** {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
**Review Type:** {review_type}
**Description:** {description or "No description provided"}

---

{content}

---
*Generated by AI Code Review & QA Platform*
"""
    
    # Save file
    filepath.write_text(markdown_content, encoding='utf-8')
    return filepath
